#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 82 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1536 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 190
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname behrakis-"
 #"nobrega-hw3) (read-case-sensitive #t) (teachpacks ()) (htdp-settings"
 #" #(#t constructor repeating-decimal #f #t none #f () #t)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 62
#";; Kristen Behrakis (kbehrakis) and Emilia Nobrega (emnobrega)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"dvd"
0 0 24 3 2 #" ("
0 0 14 3 7 #"quality"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 18 #"unlimited-renting?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 47 #";; a Dvd is a (make-dvd String Natural Boolean)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 23 #";; interp: an dvd where"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 82
(
 #";;  quality is whether the dvd is stadard definition (SD) or high de"
 #"finition (HD) "
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 86
(
 #";;  number is the number of dvds to be shipped at one time (between "
 #"1 and 4 inclusive)"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 73
(
 #";;  unlimited-renting? is true if the plan allows unlimited rental p"
 #"eriod"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #";;example"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-DVD"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-DVD2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"streaming"
0 0 24 3 2 #" ("
0 0 14 3 8 #"platform"
0 0 24 3 1 #" "
0 0 14 3 12 #"pref-quality"
0 0 24 3 1 #" "
0 0 14 3 10 #"unlimited?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 58
#";; a Streaming is a (make-streaming String String Boolean)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 29 #";; interp: an streaming where"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 83
(
 #";;  platform is the platform used for viewing (i.e PC, Mac, Android "
 #"Phone, or Roku)"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 89
(
 #";;  pref-quality is whether stadard definition (SD) or high definiti"
 #"on (HD) is preferred "
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 59
#";;  unlimitied? is true if the plan has unlimited streaming"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #";;example"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-stream"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"new-stream2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Roku\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 25 #";; a RentalPlan is one of"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 7 #";;  Dvd"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 13 #";;  Streaming"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #2"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 7         223 4           0 0           0 36 0 17 3 10 #";;template"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 21 #";;fcn-for-dvd: Dvd ->"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"fcn-for-dvd"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dvd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"dvd-quality"
0 0 24 3 2 #"  "
0 0 14 3 5 #"a-dvd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"dvd-number"
0 0 24 3 2 #"  "
0 0 14 3 5 #"a-dvd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 22 #"dvd-unlimited-renting?"
0 0 24 3 2 #"  "
0 0 14 3 5 #"a-dvd"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 7         223 4           0 0           0 36 0 17 3 10 #";;template"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 27 #";;fcn-for-dvd: Streaming ->"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fcn-for-streaming"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-stream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 18 #"streaming-platform"
0 0 24 3 2 #"  "
0 0 14 3 8 #"a-stream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 22 #"streaming-pref-quality"
0 0 24 3 2 #"  "
0 0 14 3 8 #"a-stream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 20 #"streaming-unlimited?"
0 0 24 3 2 #"  "
0 0 14 3 8 #"a-stream"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 7         217 4           0 0           0 35 0 17 3 11 #";; template"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; fcn-for-rentalplan: RentalPlan ->"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 18 #"fcn-for-rentalplan"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 4 #"dvd?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 4 #")  ("
0 0 14 3 11 #"fcn-for-dvd"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 10 #"streaming?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #") ("
0 0 14 3 17 #"fcn-for-streaming"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 4 #")]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 31 #";;is-hd?: RentalPlan -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 66
#";;consumes a rental plan and produces true if the plan includes HD"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 4 #"dvd?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"dvd-quality"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 10 #"streaming?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 2 #" ("
0 0 14 3 22 #"streaming-pref-quality"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 7 #";; test"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 26 #";; dvd-cost: Dvd -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 48 #";; consumes a dvd and produces the monthly costs"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dvd-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dvd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dvd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"dvd-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dvd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 4 #"6.99"
0 0 24 3 2 #" ("
0 0 14 3 10 #"dvd-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dvd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 22 #"dvd-unlimited-renting?"
0 0 24 3 2 #"  "
0 0 14 3 5 #"a-dvd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"           ))  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";; test "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dvd-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 5 #"12.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dvd-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 5 #"11.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dvd-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 5 #"11.49"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dvd-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 5 #"10.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 38 #";; streaming-cost: Streaming -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 54 #";; consumes a streaming and produces the monthly costs"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"streaming-cost"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-stream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"is-hd?"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-stream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 4 #"4.99"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 4 #"2.99"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 20 #"streaming-unlimited?"
0 0 24 3 2 #"  "
0 0 14 3 8 #"a-stream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";; test "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"streaming-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 4 #"9.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"streaming-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 4 #"4.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"streaming-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Android Phone\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 4 #"2.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"streaming-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Android Phone\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 4 #"7.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 37 #";; monthly-cost: RentalPlan -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 67
#";; consumes a rentalplan and produces the monthly cost of the plan "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 4 #"dvd?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 4 #")  ("
0 0 14 3 8 #"dvd-cost"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 10 #"streaming?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #") ("
0 0 14 3 14 #"streaming-cost"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 8 #";; tests"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 5 #"12.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 5 #"10.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 5 #"12.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 4 #"8.49"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Roku\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 4 #"9.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 4 #"2.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"PC\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 21 3 4 #"7.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"monthly-cost"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Android Phone\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 21 3 4 #"4.99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #4"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 42 #";; make-high-def: RentalPlan -> RentalPlan"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 29 #";; consumes a rental plan and"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 80
(
 #";; produces a plan that is the same as the original, but the produce"
 #"d plan is HD"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 13 #"make-high-def"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 4 #"dvd?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"dvd-number"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #") ("
0 0 14 3 22 #"dvd-unlimited-renting?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 10 #"streaming?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 2 #" ("
0 0 14 3 18 #"streaming-platform"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"HD\""
0 0 24 3 2 #" ("
0 0 14 3 20 #"streaming-unlimited?"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-plan"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";; tests"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-high-def"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-high-def"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-streaming"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Mac\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-high-def"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-high-def"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-dvd"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"HD\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #5"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 27 #";; a ListOfString is one of"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #";;  empty"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 30 #";;  (cons String ListOfString)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 54 #";;  interp:  ListOfString represents a list of strings"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #";; contains-all-numbers?: ListOfString -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 33 #";; consumes a list of strings and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 76
(
 #";; produces true if at least one string constists only of numeric ch"
 #"aracters"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";; tests"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"CS1101\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"A1\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"32\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"CS1101\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"A-one\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"42\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"contains-all-numbers?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"42\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"32\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #6"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 27 #";; has-x?: String-> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 77
(
 #";; consumes a string and produces true if it contains an upper or lo"
 #"wercase x"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"string-contains?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 16 #"string-contains?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";; tests"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"extra\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"dog\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 34 #";;x-string-count: String -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 66
#";;consumes a string and produces the number of \"x\"s in that string"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"has-x?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 2 #" ("
0 0 14 3 7 #"implode"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 2 #" ("
0 0 14 3 7 #"implode"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 4 #"str1"
0 0 24 3 9 #"))))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 8 #";; tests"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"exam\""
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"EXTRAextra\""
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 34 #";; count-x: ListOfString -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 30 #";; consumes a ListOfString and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 92
(
 #";; produces the total number of X's (upper and lower case) that occu"
 #"r in all of the strings "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-string-count"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";; tests"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"add\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"multiply\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"example\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"EXAM\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"extra\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"EXTRA\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"wow\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))) "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"xX\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xax\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"xXxxX\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))) "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"extra\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"wow\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; QUESTION #7"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 28 #";; a ListOfNatural is one of"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 9 #";;  empty"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 31 #";;  (cons String ListOfNatural)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; lengths-of-strings: ListOfStrings -> ListOfNatural"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 33 #";; consumes a list of strings and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 11 #";; produces"
0 0 17 3 71
(
 #" a list of naturals with the lengths of each of the strings in the l"
 #"ist"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lengths-of-strings"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 18 #"lengths-of-strings"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 7 #";; test"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lengths-of-strings"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lengths-of-strings"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lengths-of-strings"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"testing\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0           0
